#include "winpriv.h"
static HWND empty_wnd;
#define EMPTYBARCLASS "EmptyBar"
static LRESULT CALLBACK
nothing_proc(HWND hwnd, UINT msg, WPARAM wp, LPARAM lp)
{
  printf("%p %p %p %p\n", &wp, &lp, &msg, &hwnd);
  //return 0;
  win_schedule_update();
  return DefWindowProcA(hwnd, msg, wp, lp);;
}
void
win_toggle_empty(bool show, bool focus)
{
  puts("toggle");
  RECT cr;
  GetClientRect(wnd, &cr);
  int width = cr.right - cr.left;

  int margin = cell_width / 6 + 1;
  int height = cell_height + margin * 2;
  //int button_width = cell_width * 2;

  //int edit_width = width - button_width * 3 - margin * 2;
  //int ctrl_height = height - margin * 2;
  //int sf_height = ctrl_height - 4;
  RegisterClassA(&(WNDCLASSA){
      .style = 0,
				.lpfnWndProc = nothing_proc,
				.cbClsExtra = 0,
				.cbWndExtra = 0,
				.hInstance = inst,
				.hIcon = NULL,
				.hCursor = NULL,
				.hbrBackground = (HBRUSH)(COLOR_3DFACE + 1),
				.lpszMenuName = NULL,
				.lpszClassName = EMPTYBARCLASS
      });

  empty_wnd = CreateWindowExA(0, EMPTYBARCLASS, "", WS_CHILD | WS_VISIBLE, 0, 0, 0, 0, wnd, 0, inst, NULL);
  SetWindowPos(empty_wnd, 0,
	       cr.right - width, cr.bottom - height,
	       width, height,
	       SWP_NOZORDER);
  show = show || focus;
  ShowWindow(empty_wnd, SW_SHOW);
}
